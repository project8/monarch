package Protobuf;

// The MonarchHeader class in protocol buffer form.
message MonarchHeader
{
  // The name of the file this belongs to.  Seems redundant
  // but could be useful in terms of keeping track of files.
  required string filename = 1;
  
  //there is no advantage to packaging the digitizer info into
  //a message, so it was removed to simplify the structure
  
  // What is the sample rate?
  required double acqRate = 2;
  
  // How many channels were used?  
  required uint32 acqMode = 3;
  
  // How long did we digitize for?
  required uint32 acqTime = 4;
  
  // How long are the records in bytes?
  required uint32 recSize = 5;
  
  // Now things like creation date (because why not)
  optional string runDate = 6 [default = "(unknown)"];
  
  // Optionally tag the run with some text description
  optional string runInfo = 7 [default = "(unknown)"];

  // It's nice to know where data came from.  This flag will
  // specify that the data is either from mantis or it is
  // simulated. 
  enum RunSource
  {
    Mantis = 0;
    Simulation = 1;
  }
  // Optionally flag the source of the data.
  optional RunSource runSource = 8;

  // It's also nice to know if you expect this file to be
  // a background measurement or to contain an expected signal.
  enum RunType
  {
    Background = 0;
    Signal = 1;
    Other = 999;
  }
  // Optionally flag the content of the data.
  optional RunType runType = 9;
  
  // Are the records for multiple channels separate or interleaved?
  // This option is ignored if only one channel is recorded (see acqMode)
  enum FormatMode
  {
    Single = 0;
    MultiSeparate = 1;
    MultiInterleaved = 2;
  }
  // Optionally specify if the records are separate or interleaved; separate is the default for backwards compatibility
  optional FormatMode formatMode = 10 [default = MultiInterleaved]; 
  
  // What is the size of the integer data type used to make the data? (default in Monarch is 1)
  optional uint32 dataTypeSize = 11 [default = 1];
  
  // What is the bit depth of the digitizer that produced the data? (default in Monarch is 8)
  optional uint32 bitDepth = 12 [default = 8];
  
  // What is the minimum voltage of the digitizer that produced the data? (units: V; default in Monarch is -0.25 V)
  optional double voltageMin = 13 [default = -0.25];
  
  // What is the voltage range of the digitizer that produced the data? (units: V; default in Monarch is 0.5 V)
  optional double voltageRange = 14 [default = 0.5];
  

}
